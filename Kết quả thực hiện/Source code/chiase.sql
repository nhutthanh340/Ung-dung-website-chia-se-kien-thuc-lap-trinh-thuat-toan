-- MySQL dump 10.13  Distrib 8.0.15, for Win64 (x86_64)
--
-- Host: localhost    Database: chiase
-- ------------------------------------------------------
-- Server version	8.0.15

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `baidang`
--

DROP TABLE IF EXISTS `baidang`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `baidang` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `idbaiviet` int(10) unsigned NOT NULL,
  `ngaydang` date NOT NULL,
  `linknoidung` longtext,
  PRIMARY KEY (`id`),
  KEY `fk_baidang_baiviet` (`idbaiviet`),
  CONSTRAINT `fk_baidang_baiviet` FOREIGN KEY (`idbaiviet`) REFERENCES `baiviet` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `baidang`
--

LOCK TABLES `baidang` WRITE;
/*!40000 ALTER TABLE `baidang` DISABLE KEYS */;
INSERT INTO `baidang` VALUES (1,1,'2019-02-02',NULL),(2,2,'2019-03-12',NULL),(7,12,'2019-03-12',NULL),(10,15,'2019-06-14',NULL),(12,16,'2019-06-14',NULL),(13,17,'2019-06-14',NULL),(14,18,'2019-06-14',NULL),(15,19,'2019-06-14',NULL),(16,21,'2019-06-14',NULL),(17,20,'2019-06-14',NULL),(18,22,'2019-06-14',NULL),(19,26,'2019-06-14',NULL),(20,25,'2019-06-14',NULL),(21,23,'2019-06-14',NULL),(22,24,'2019-06-14',NULL),(26,30,'2019-06-15',NULL);
/*!40000 ALTER TABLE `baidang` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `baiviet`
--

DROP TABLE IF EXISTS `baiviet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `baiviet` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `tenbaiviet` text NOT NULL,
  `idtheloaibaiviet` int(10) unsigned NOT NULL,
  `noidung` longtext NOT NULL,
  `idnguoigui` int(10) unsigned NOT NULL,
  `trangthai` varchar(45) DEFAULT NULL,
  `tomtat` longtext,
  PRIMARY KEY (`id`),
  KEY `fk_baiviet_nguoidung` (`idnguoigui`),
  KEY `fk_baiviet_theloaibaiviet` (`idtheloaibaiviet`),
  CONSTRAINT `fk_baiviet_nguoidung` FOREIGN KEY (`idnguoigui`) REFERENCES `nguoidung` (`id`),
  CONSTRAINT `fk_baiviet_theloaibaiviet` FOREIGN KEY (`idtheloaibaiviet`) REFERENCES `theloaibaiviet` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `baiviet`
--

LOCK TABLES `baiviet` WRITE;
/*!40000 ALTER TABLE `baiviet` DISABLE KEYS */;
INSERT INTO `baiviet` VALUES (1,'4 đặc tính của lập trình hướng đối tượng (Object oriented program)',2,'Lập trình hướng đối tượng quá quen thuộc rồi bạn nào đi học lập trình đều phải học, đi phỏng vấn cũng vậy hỏi suốt(chắc cái này tùy vào vị trí tuyển dụng chủ yếu junior chắc chắn sẽ hỏi).Nó là nền tảng cho hầu hết các design pattern hiện nay.Bài viết này đúc rút kinh nghiệm thực tế và độ hiểu của mình về OOP. Lập trình hướng đối tượng là một kỹ thuật lập trình cho phép lập trình viên tạo ra các đối tượng trong code để trừu tượng hóa các đối tượng thực tế trong cuộc sống.Là cách để che dấu những tính chất xử lý bên trong của đối tượng, những đối tượng khác không thể tác động trực tiếp làm thay đổi trạng thái  chỉ có thể tác động thông các method public của của đối tượng đó. Mình sẽ tạo ra 2 class để thể hiện điều này. Là một đối tượng thuộc các lớp khác nhau có thể hiểu cùng một thông điệp theo cách khác nhau. Tính trừu tượng(Abstraction)',1,'Đã xác nhận','Lập trình hướng đối tượng quá quen thuộc rồi bạn nào đi học lập trình đều phải học, đi phỏng vấn cũng vậy hỏi suốt(chắc cái này tùy vào vị trí tuyển dụng chủ yếu junior chắc chắn sẽ hỏi)'),(2,'5 ngôn ngữ lập trình tốt nhất cho người mới bắt đầu',1,'Nếu bạn đang nghĩ đến việc học lập trình, thì ngôn ngữ bạn quyết định chọn để bắt đầu phụ thuộc rất nhiều vào cái mà bạn đang cố gắng học, cái mà bạn muốn làm với kỹ năng đó, và cái đích cuối cùng mà bạn muốn đi tới. Tuy nhiên, một số ngôn ngữ lập trình dễ học hơn những ngôn ngữ khác, và có một cộng đồng tích cực trong việc dạy hoặc đưa ra nhiều các kỹ năng hữu ích một khi bạn đã học chúng. Đây là 5 ngôn ngữ tốt nhất, dựa trên sự đề cử của chính các bạn độc giả. Java: Ngôn ngữ Java của hãng Oracle là một trong những ngôn ngữ lập trình có chỗ đứng lâu nhất, bền bỉ và có tầm ảnh hưởng nhất. Bạn sẽ tìm thấy Java tại lõi của các ứng dụng trong và ngoài môi trường web, trên tất cả các nền tảng, các hệ điều hành và các thiết bị khác nhau. Nó là một ngôn ngữ lập trình hướng đối tượng, có đặc trưng sâu sắc dựa trên lớp (class-based), được thiết kế để có thể hoạt động được trên nhiều nền tảng nhất có thể. Vì lý do đó, nó cũng là một trong những ngôn ngữ lập trình phổ biến nhất thế giới, điều đó khiến nó trở nên vô cùng giá trị để học nếu bạn đang có hứng thú trong việc học lập trình. Nhược điểm của Java đó là để đảm bảo khả năng có thể chạy được ở nhiều nơi, nên nó tương đối khó nắm bắt để lập trình một cách hiệu quả và năng suất. Ruby: Ruby là một ngôn ngữ lập trình hướng đối tượng, dynamic, mã nguồn mở được phát triển bởi nhà khoa học máy tính người Nhật Bản là Yukihiro Matsumoto vào những năm 90s của thế kỷ trước, điều đó khiến cho nó trở thành một trong những ngôn ngữ lập trình tuổi đời còn ít nhưng lại được sử dụng rộng rãi. Ruby được thiết kế có cú pháp dễ đọc và dễ viết đối với con người, mà không cần thiết phải học một số lượng lớn những dòng lệnh và những \"từ điển\" chuyên biệt khi mới bắt đầu. Trong khi bản thân ngôn ngữ này là hướng đối tượng, nhưng nó cũng hỗ trợ lập trình thủ tục, chức năng và mệnh lệnh (imperative), một trong những yếu tố khiến nó đặc biệt linh hoạt. Python: Khi mọi người bàn luận về những ngôn ngữ lập trình nên học đầu tiên và ngôn ngữ nào dễ dàng hơn cho mọi người có thể học nhanh chóng, Python chắc chắn là một lựa chọn. Nó được phát triển từ những năm 80s bởi Guido van Rossum, người sau đó đã quản lý ngôn ngữ này thông qua tổ chức phi lợi nhuận Python Software Foundation, phục vụ như là đơn vị quản lý của ngôn ngữ này, Python là ngôn ngữ mã nguồn mở và sử dụng miễn phí, thậm chí cho các ứng dụng thương mại. Python thường được sử dụng và xem như là một ngôn ngữ kịch bản, cho phép các lập trình viên tạo ra một số lượng lớn code dễ đọc trong một khoảng thời gian ngắn, nhưng nó cũng là một ngôn ngữ dynamic, hỗ trợ hướng đối tượng, thủ tục, và có phong cách lập trình chức năng như những ngôn ngữ khác. Bởi tính mềm dẻo của nó, Python là một trong những ngôn ngữ lập trình bậc cao được sử dụng rộng rãi nhất ngày nay. C/C++: Trong khi những đề cử của độc giả đa số là cho ngôn ngữ lập trình C và khá ít đề cử C++, chúng tôi đã quyết định gộp 2 ngôn ngữ này làm một, vì dù sao C++ cũng là một bước tiến từ C. Chúng ta không đi quá chi tiết vào lịch sử của ngôn ngữ C, và sau đó là C++ (cái mà đã bắt đầu cải tiến và cập nhật để mang ngôn ngữ C đến với các ứng dụng hiện đại), hãy chỉ nói về 2 ngôn ngữ này kể từ khi chúng được sinh ra từ những năm 1970s và đầu những năm 80s, tương ứng (bạn có thể đọc thêm về lịch sử của hai ngôn ngữ này ở link Wikipedia phía trên). C là ngôn ngữ lập trình mệnh lệnh được sử dụng cực kỳ rộng rãi, đa mục đích; có một tầm ảnh hưởng lớn đến hầu hết các ngôn ngữ lập trình đi sau nó. C++ mặt khác còn đi một bước xa hơn trong việc bổ sung các đặc trưng hướng đối tượng class đến ngôn ngữ này, đi kèm với các hàm ảo và template. C++ là một trong những ngôn ngữ lập trình phổ biến nhất trên thế giới, và ngày nay nó vẫn còn được sử dụng rộng rãi trong mọi thứ từ video games cho đến các phần mềm thương mại. Việc học C++ có một chút khó khăn hơn so với C, mặc dù nhiều người sẽ tranh cãi rằng không có lý do gì mà lại bắt đầu học lập trình bằng ngôn ngữ C cả. Đó là một cuộc tranh luận không có hồi kết. Javascript: Bạn đừng nhầm lẫn JavaScript với Java, đây là một ngôn ngữ kịch bản đã được phát triển vào những năm 90s bởi Brendan Eich, cựu nhân viên của hãng Netscape Communications và giờ là Mozilla Foundation. JavaScript là một trong những công nghệ nền tảng mà web dựa trên đó. Đừng để tôi đánh lừa bạn - JavaScript tồn tại bên ngoài các trình duyệt, nhưng phần lớn nằm trong ngữ cảnh của các ứng dụng và dịch vụ kết nối. Ngôn ngữ này tự bản thân nó là dynamic, và cung cấp cho các lập trình viên sự mềm dẻo để sử dụng phong cách lập trình hướng đối tượng (và bản thân ngôn ngữ này hầu như là hướng đối tượng) cũng như là hướng chức năng và mệnh lệnh. Nó tiếp nhận nhiều cú pháp từ ngôn ngữ C, và nếu bạn lên kế hoạch để làm bất kỳ sự phát triển cho web, thì việc học JavaScript nên nằm trong danh sách của bạn.',12,'Đã xác nhận','Nếu bạn đang nghĩ đến việc học lập trình, thì ngôn ngữ bạn quyết định chọn để bắt đầu phụ thuộc rất nhiều vào cái mà bạn đang cố gắng học, cái mà bạn muốn làm với kỹ năng đó, và cái đích cuối cùng mà bạn muốn đi tới'),(12,'Thế nào là lập trình hướng đối tượng OOP?',2,'Đối tượng: Trong lập trình hướng đối tượng, đối tượng được hiểu như là 1 thực thể: người, vật hoặc 1 bảng dữ liệu, . . .Lớp: Các đối tượng có các đặc tính tương tự nhau được gom lại thành 1 lớp đối tượng. Sự khác nhau giữa đối tượng và lớp: Lớp là một khuôn mẫu còn đối tượng là một thể hiện cụ thể dựa trên khuôn mẫu đó. Sự xuất hiện của 2 khái niệm mới là lớp và đối tượng chính là đặc trưng của phương pháp lập trình hướng đối tượng. Nó đã giải quyết được các khuyết điểm của phương pháp lập trình hướng cấu trúc để lại. Ngoài ra 2 khái niệm này đã giúp biểu diễn tốt hơn thế giới thực trên máy tính.',12,'Đã xác nhận','Đây là bài đầu tiên trong series Lập trình hướng đối tượng với C#. Trong bài này chúng ta sẽ cùng tìm hiểu xem lập trình hướng đối tượng là gì? Những đặc điểm cơ bản của lập trình hướng đối tượng?'),(15,'Java là gì? Giới thiệu ngôn ngữ Java',1,'Java là một ngôn ngữ lập lập trình, được phát triển bởi Sun Microsystem vào năm 1995, là ngôn ngữ kế thừa trực tiếp từ C/C++ và là một ngôn ngữ lập trình hướng đối tượng. Vì sao ngôn ngữ này lại được đặt tên là Java? Java là tên một hòn đảo ở Indonesia - hòn đảo nổi tiếng với loại coffee Peet và cũng là loại nước uống phổ biến của các kỹ sư Sun. Ban đầu Ngôn ngữ này được đặt tên là \"Oak\" (có nghĩa là \"Cây sồi\" - 1991), nhưng các luật sư của Sun xác định rằng tên đó đã được đăng ký nhãn hiệu nên các nhà phát triển đã phải thay thế bằng một tên mới -  và cũng vì lý do trên mà cái tên Java đã ra đời và trở thành tên gọi chính thức của Ngôn ngữ này - Ngôn ngữ Lập trình Java. Ngày nay Java được sử dụng với các mục đích sau: Phát triển ứng dụng cho các thiết bị điện tử thông minh, các ứng dụng cho doanh nghiệp với quy mô lớn. Tạo các trang web có nội dung động (web applet), nâng cao chức năng của server. Phát triển nhiều loại ứng dụng khác nhau: Cơ sở dữ liệu, mạng, Internet, viễn thông, giải trí,...Tiêu chí hàng đầu của Ngôn ngữ Lập trình Java là \"Write Once, Run Anywhere\" (Viết một lần, chạy mọi nơi), nghĩa là Java cho phép chúng ta viết code một lần và thực thi được trên các hệ điều hành khác nhau. Ví dụ, chúng ta viết code trên Hệ điều hành Windows và nó có thể thực thi được trên các Hệ điều hành Linux và Mac OS...\r\n',12,'Đã xác nhận','Trong bài đầu tiên về series tự học Java cơ bản (Java Core) này, chúng ta sẽ lần lượt tìm hiểu về khái niệm Java là gì, sự hình thành của ngôn ngữ này, vì sao ngôn ngữ này lại được đặt tên là Java? Bên cạnh đó, bài viết này cũng sẽ lần lượt giới thiệu những đặc điểm cơ bản và ứng dụng của ngôn ngữ Java và các Platform cơ bản của ngôn ngữ lập trình Java.'),(16,'Python là gì? Tại sao bạn nên học lập trình Python?',1,'Theo hãng Payscale, các lập trình viên Python tại Mỹ được hưởng một mức lương trung bình là $88.000 đô-la/năm (gần 2 tỷ VNĐ), và có một số nơi lên đến $135 K đô-la mỗi năm (gần 3 tỷ VNĐ). Trong một nghiên cứu khác, các lập trình viên Python có mức tăng lương hàng năm cao nhất (4%) so với các chuyên gia CNTT đi theo công nghệ khác, và xu hướng mức tiền lương sẽ cao hơn trong tương lai. Vậy thì điều gì làm cho các lập trình viên Python xứng đáng được hưởng nhiều quyền lợi đến như vậy? Vâng, đối với những người mới bắt đầu, bằng cách nào đó họ thấy mình đang góp phần thay đổi thế giới này trở nên tốt đẹp hơn... thông qua một vài dòng code tại một thời điểm nào đó. Đó là bởi vì Python được sử dụng rất nhiều trong các dịch vụ sáng tạo nhất, các sản phẩm và ứng dụng được phát triển bởi các công ty công nghệ hàng đầu như Google, Walt Disney và Philips; và các script thanh lịch của nó là một phần xương sống của mọi ngành công nghiệp từ ngân hàng cho đến không gian vũ trụ. Bạn sẽ thấy các lập trình viên Python mày mò, sáng tạo các giải pháp cho lĩnh vực hàng không, email, cơ sở dữ liệu, phát triển game, nghệ thuật kỹ thuật số, thương mại điện tử, ứng dụng trực tuyến sử dụng các web framework khác nhau, geo-mapping, data mining, an ninh quốc gia, phát hiện ma túy và mô phỏng. Nhưng đừng quá ngạc nhiên hay sợ hãi. Bên dưới phạm vi và sức mạnh đáng kinh ngạc của Python là một cú pháp đơn giản và thanh lịch nhất trong tất cả các ngôn ngữ lập trình. Và hãy cẩn thận: một số người đã đi quá xa khi so sánh code Python là một sự pha trộn của toán học mẫu giáo và tiếng Anh. Chính sự gần gũi của Python với ngôn ngữ của con người khiến nhiều trường học, đại học và các trung tâm đào tạo sử dụng nó là ngôn ngữ lập trình để giảng dạy cho những người mới bắt đầu trong các lớp học về khoa học máy tính. Ngày nay, tình yêu dành cho Python có mặt ở khắp mọi nơi, từ các lập trình viên hàng đầu thế giới cho đến các cậu bé mới học lập trình như Caolan Fleming ở Ireland, cậu đã tự học Python để xây dựng ứng dụng từ hồi 9 tuổi. Không giống như tên gọi của một loài bò sát mà nó mang trên mình, Python không nở ra từ trứng mà nó hình thành từ tâm trí của một lập trình viên người Hà Lan tên là Guido van Rossum. Guido bắt đầu tạo ra Python vào cuối những năm 1980 như một \"sở thích\" cũng là để lấp đầy nhu cầu cho một ngôn ngữ lập trình mới cấp cao hơn tại trụ sở tại Amsterdam CWI, một viện nghiên cứu quốc gia về toán học và lý thuyết khoa học máy tính. Guido đặt tên ngôn ngữ này lấy cảm hứng từ nhóm kịch Monty Python (một nhóm hài kịch huyền thoại người Anh) và khởi chạy nó như là một ngôn ngữ kịch bản nguồn mở vào năm 1991. Guido, người giữ danh hiệu \"Kẻ độc tài nhân từ của cuộc sống\" trong vũ trụ Python, ban đầu phản đối việc sử dụng linh vật cho Python là một con rắn, nhưng cuối cùng cũng đồng thuận với nhà xuất bản O\'Reilly Media để cho ra mắt cuốn sách đầu tiên của mình về ngôn ngữ này trong năm 1996. Hơn hai thập kỷ sau khi được bắt đầu như một dự án cá nhân, Python đang đóng vai trò quan trọng trong nhiều ứng dụng đòi hỏi khắt khe nhất hiện nay và có khả năng sẽ được sử dụng trong lập trình để giải quyết các vấn đề khó khăn nhất của ngày mai. Trong thực tế, cùng với SQL và R, Python nằm trong top các ngôn ngữ lập trình được sử dụng nhiều nhất bởi các nhà khoa học dữ liệu, đó là những chuyên gia đang phát triển các giải pháp thông minh cho nhiều thách thức khác nhau như việc tìm kiếm phương pháp chữa trị cho bệnh ung thư, lập bản đồ hành vi khủng bố, và cải thiện khả năng nhận thức của trẻ em.Vì vậy, có lẽ bạn sẽ muốn bắt đầu học lập trình Python? Bởi vì khi làm điều đó, chắc chắn nó sẽ mang lại nhiều niềm vui cho ví tiền của bạn, cho các nhà tuyển dụng CNTT, và cho cả thế giới này.',12,'Đã xác nhận','Python có thể là cửa ngõ để mọi người bước vào thế giới lập trình máy tính, và là một phương tiện để bạn nhận được khoản tiền lương béo bở đi kèm với một công việc đầy sáng tạo và nhiều niềm vui. Được đặt theo tên một nhóm hài kịch và nổi tiếng với cú pháp đơn giản và thanh lịch, Python được sử dụng cho nhiều loại ứng dụng từ các trò game đơn giản đến các thuật toán tìm kiếm phức tạp. Python luôn nằm trong top 10 ngôn ngữ lập trình phổ biến nhất ở tất cả các bảng xếp hạng lớn (TIOBE, RedMonk, PYPL), đó là một minh chứng mạnh mẽ để tuyên bố rằng Python có tốc độ rất nhanh, mạnh mẽ và có mặt ở khắp mọi nơi.'),(17,'4 Lý do tại sao Ruby là ngôn ngữ lập trình bạn nên học đầu tiên',1,'Học Ruby là một bước đệm để học Ruby on Rails: Nếu bạn đang làm việc trong ngành công nghiệp phần mềm hoặc cộng đồng khởi nghiệp startup, thì rất có thể bạn đã nghe nói về Ruby on Rails (thường được gọi tắt là Rails). Rails là một framework để tạo ra các ứng dụng web. Nhiều sinh viên mới học lập trình không phân biệt được sự khác nhau giữa Ruby và Ruby on Rails. Ruby là một ngôn ngữ lập trình. Ruby on Rails là một framework dùng và phụ thuộc vào ngôn ngữ lập trình Ruby. Hãy nghĩ về một framework như một bộ sưu tập code viết sẵn để giúp các lập trình viên. Trong trường hợp này, framework Rails là một bộ sưu tập code viết sẵn để giúp các lập trình viên tạo ra các website và các ứng dụng web. Bạn vẫn còn lẫn lộn ư? Nếu vậy thì hãy suy nghĩ về các bước làm một chiếc bánh sandwich. Bạn chỉ cần một miếng thịt, pho mát, rau diếp và hai lát bánh mì. Nhưng bánh mì đến từ đâu? Sẽ dễ dàng hơn để có được những lát bánh mì từ các cửa hàng tạp hóa thay vì bạn phải trộn bột mì với nước và tự nướng lấy. Trong trường hợp này, ngôn ngữ lập trình Ruby là bột và nước. Bánh mì lát thái sẵn chính là framework Ruby on Rails. Học Ruby là một điều kiện tiên quyết để học Ruby on Rails. Bạn sẽ tiến một bước gần hơn đến việc tạo ra các ứng dụng web như Twitter, Yellow Pages, Hulu, hay Groupon. Trong danh sách những ngôn ngữ lập trình phổ biến nhất TIOBE thì Ruby là ngôn ngữ đứng thứ 10 ở thời điểm bài viết này. Mặc dù phổ biến là một điều tốt, nhưng việc có nhiều nhu cầu tuyển dụng trên thị trường việc làm thì còn tốt hơn. Hiện nay, Ruby đang có tốc độ tăng trưởng về nhu cầu tuyển dụng đáng kinh ngạc. Nhu cầu đối với các lập trình viên Ruby có thể gắn liền với framework Ruby on Rails, nó đã giúp đưa ngôn ngữ này trở thành một trong những ngôn ngữ lập trình chính vào năm 2004. Các nhà tuyển dụng đang xây dựng các trang web của họ bằng cách sử dụng Ruby on Rails. Họ cần các lập trình viên Ruby để duy trì code base của họ. Nhu cầu cho Ruby cũng tồn tại bên ngoài Ruby on Rails. Ruby ngày càng trở nên phổ biến trong các vai trò DevOps. Có phải bạn đang tự hỏi DevOps là gì? Một trang web hay ứng dụng web với số lượng lớn traffic thường sẽ đòi hỏi hàng trăm máy tính để chạy trên đó, gọi là các máy chủ. Các kỹ sư DevOps đảm bảo độ tin cậy và hiệu quả của các máy chủ này. Các kỹ sư DevOps cũng tự động hóa việc triển khai các máy chủ, do đó các trang web có thể nhanh chóng xử lý một lượng lớn lưu lượng truy cập. Ruby là một ngôn ngữ lập trình phổ biến cho các framework DevOps như Puppet và Chef. Những phần code đã có mà bạn có thể tận dụng - Ruby có những framework và các thư viện được xây dựng sẵn như Ruby on Rails và Chef. Bạn có thể sử dụng những phần code được xây dựng sẵn này cho các dự án của riêng mình. Tại sao lại phải mất thời gian để phát minh lại cái bánh xe khi có ai đó đã thực hiện điều này cho bạn? Ruby thậm chí còn có hệ thống riêng của mình để quản lý các framework và thư viện, được gọi là RubyGems. Hiện tại có hơn 60.000 thư viện để bạn tha hồ lựa chọn! Tài liệu - các tài liệu hướng dẫn đóng một vai trò rất lớn trong cuộc sống của mọi lập trình viên. Khi bạn đang làm việc trên dự án của mình, bạn sẽ liên tục tìm kiếm thông qua các tài liệu hướng dẫn. Lần đầu tiên kết nối tới một cơ sở dữ liệu? Cách tốt nhất để bắt đầu là tìm tài liệu hướng dẫn. Khi bạn đang lập trình, sẽ có rất nhiều \"lần đầu tiên\", nơi bạn sẽ cần phải truy cập vào những tài liệu tốt. Các tài nguyên học tập - Ruby có một số lượng lớn các nguồn tài nguyên để bạn lựa chọn. Có rất nhiều cuốn sách, screencasts, các khóa học, và các bootcamp dành riêng cho các lập trình viên trong việc học Ruby. Thậm chí có những hướng dẫn miễn phí nằm rải rác khắp nơi trên các trang web. Cộng đồng - Bạn đang bị mắc kẹt trong một vấn đề lập trình hoặc có một câu hỏi? Hãy tìm một mailing list Ruby, chat room, hoặc diễn đàn để đặt câu hỏi! Cộng đồng Ruby có rất nhiều các nhà phát triển tốt bụng thích giúp đỡ người khác. Bạn hãy đóng góp trở lại cộng đồng một khi có nhiều kinh nghiệm hơn. Thậm chí còn có những Ruby User Groups, nơi các lập trình viên có hứng thú trong Ruby gặp mặt để thảo luận và học hỏi lẫn nhau.',12,'Đã xác nhận','Học lập trình là một quá trình rất gian nan và thử thách. Bạn sẽ gặp phải những khái niệm lạ lẫm, những thuật ngữ kỹ thuật, và những lựa chọn khó khăn. Một trong những sự lựa chọn đầu tiên bạn sẽ phải thực hiện là việc nên bắt đầu với ngôn ngữ lập trình nào.Ruby là một ngôn ngữ lập trình đa mục đích, được tạo ra vào năm 1990 bởi Yukihiro \"Matz\" Matsumoto. Nó cũng là một trong những ngôn ngữ tốt nhất để bắt đầu khi bạn mới học lập trình.'),(18,'Ngôn ngữ JavaScript là tương lai của lập trình ?',1,'JavaScript là ngôn ngữ kịch bản phía máy khách (client-side) duy nhất. Do đó, nó được sử dụng trên hầu hết các trang web mà bạn nhìn thấy trên internet. Đây là một trong những lý do tại sao Codecademy cung cấp JavaScript là ngôn ngữ đầu tiên cho các học viên tìm hiểu. Không giống như các ngôn ngữ cổ điển đang được giảng dạy ở môn khoa học máy tính tại các trường đại học, JavaScript chắc chắn sẽ được sử dụng trong công việc nếu bạn là một nhà phát triển web. Ngoài ra, kể từ khi JavaScript chạy trong một trình duyệt, bạn không cần phải tải một phần mềm nào đó về để sử dụng nó. Tất cả bạn cần chỉ là một trình soạn thảo văn bản (như TextWrangler hay TextEdit) và một trình duyệt web. Đây là một lợi ích rõ ràng cho các lập trình viên mới vào nghề. Mặc cho những tiện ích của nó mang lại, các lập trình viên không coi JavaScript là ngôn ngữ tinh tế nhất - cú pháp của nó có vẻ lộn xộn. CoffeeScript là một nỗ lực để thay đổi điều này - nó làm cho JavaScript trông giống như Ruby hay Python bằng cách loại bỏ các dấu ngoặc xoắn, dấu chấm phẩy, bổ sung thêm khoảng trắng và căn lề thụt đầu dòng. Những thay đổi này làm cho code dễ đọc hơn, cho dù bạn đang xem lại phần code cũ của mình và cố gắng nhớ ra nó dùng để làm gì, hay đang làm việc chung trên một dự án với các lập trình viên khác.Đầu tiên, như chúng ta đã nói ở trên, JavaScript có thể được sử dụng để xây dựng toàn bộ một trang web nếu sử dụng với Node.js và MongoDB (một cơ sở dữ liệu). Node.js là bất đồng bộ, điều đó làm cho nó có tính dễ mở rộng và rất phù hợp cho tất cả các dữ liệu lớn ở ngoài kia. Ví dụ, một nhà phát triển đã nhận thấy việc gửi 600 email với Node.js chỉ mất 3 giây, trong khi đó phải mất 30 giây với PHP. MongoDB là một cơ sở dữ liệu hướng tài liệu (document-oriented) được xây dựng phục vụ cho khả năng mở rộng nhưng các chức năng nó cung cấp vẫn tốt nhất cho cả hai thế giới. JavaScript hiện nay là một trong những cách ưa thích để phát triển ứng dụng web. Đó là ngôn ngữ được sử dụng nhiều nhất trên Github. Rất nhiều các trang web được xây dựng với Node, bao gồm cả các trang web lớn như Klout, Storify và Yammer. Việc có thể sử dụng cùng một ngôn ngữ trên cả phần front-end và back-end làm cho cuộc sống của các nhà phát triển phần mềm trở nên dễ dàng hơn. Riêng bản thân nó, JavaScript chịu trách nhiệm về các hiệu ứng động như các cửa sổ pop-up và với AJAX, những trang web có thể hiển thị dữ liệu mới mà không cần phải refresh lại trang. Bạn có thể xem một ví dụ của AJAX trong thực tế ở đây - bạn thấy thế nào khi nhấp chuột vào một hình ảnh trên trang đó, thì địa chỉ URL thay đổi và nó hiển thị dữ liệu mới tương ứng mà không cần phải refresh lại toàn bộ trang. AJAX là cụm từ viết tắt của Asynchronous JavaScript And Xml, vì vậy nó không thể được sử dụng ngoài JavaScript.HTML5 được cho là sự kết thúc của Flash, nhưng nếu HTML5 là công cụ tổ chức, thì JavaScript soán vị trí của phần tử Flash. Những video hoặc hình ảnh trực quan trước đây thường phải chạy trong một plugin thì bây giờ được phục vụ với JavaScript, chạy trong trình duyệt của bạn, vì vậy bạn không cần phải tải về một plugin của bên thứ ba để xem nó, và các nhà phát triển biết rằng người dùng sẽ có cùng trải nghiệm. Kể từ khi Javascript bắt đầu như là ngôn ngữ trông giống Java nhưng không có khả năng thực hiện cùng một tác vụ, thì nó đã tạo ra một chút ngạc nhiên cho những ai đặt cược vào sự phát triển ngày càng lớn mạnh của nó. JavaScript cũng không phải là ngôn ngữ dễ viết nhất - các nhà phát triển nói rằng Ruby hay Python được viết theo cách mà bạn mong muốn, bởi vậy cú pháp của chúng trông tự nhiên hơn. Nhưng một ngôn ngữ chỉ tốt nhất khi có các công cụ đi kèm với nó, và nhờ sự bổ sung như Node.js, jQuery (thư viện), JSON (JavaScript Object Notation) và MongoDB, JavaScript sẽ có một tương lai tươi sáng.',12,'Đã xác nhận','JavaScript là ngôn ngữ lập trình dùng để tạo ra các trang web có tính tương tác. Các slideshow, pop-up quảng cáo và tính năng autocomplete của Google là những thứ được viết bằng JavaScript. Nó được tạo ra lần đầu tiên bởi Brendan Eich tại công ty Netscape vào năm 1995 - được đặt tên là Mocha trong quá trình phát triển, phát hành phiên bản beta với tên là LiveScript và cuối cùng được đặt tên là JavaScript để lợi dụng sự phổ biến của Java (một ngôn ngữ lập trình khác) vì lý do marketing.'),(19,'Tại sao bạn nên học ngôn ngữ lập trình PHP?',1,'PHP được thiết kế để phát triển web dễ dàng hơn và nhiều người mới bắt đầu thấy sử dụng ngôn ngữ này không mấy khó khăn. Trên thực tế, code PHP rất dễ sao chép, nhiều người không phải là lập trình cũng có thể hack code PHP mà không thực sự hiểu biết về chúng. Mặc dù những lập trình viên giỏi sẽ không bao giờ sao chép và dán code mà họ không hiểu, điều này có nghĩa là rất dễ dàng để lấy code PHP. Phiên bản mới nhất của PHP (PHP7) đã khắc phục nhiều lỗi nghiêm trọng. PHP có rất nhiều tài liệu để học, nhưng bạn nên đảm bảo tránh những hướng dẫn đã lỗi thời.PHP là một ngôn ngữ kiểu động, có nghĩa là nó không áp dụng các quy tắc cứng nhắc vào việc xây dựng tính năng và bạn có thể linh hoạt giải quyết các vấn đề với các phương pháp khác nhau. Ngoài ra, PHP cũng bỏ qua các lỗi do vậy bạn vẫn có thể biên dịch và chạy chương trình cho đến khi gặp phải vấn đề.Như đã đề cập ở trên PHP là một ngôn ngữ kiểu, có nghĩa là cùng một vấn đề có thể có nghĩa khác nhau tùy thuộc vào bối cảnh. Vì ứng dụng PHP phát triển nhanh chóng và phức tạp hơn, nên người dùng cảm thấy khó bảo trì hệ thống vì khó theo dõi và sửa lỗi. Vì vậy người phát triển cần phải có kinh nghiệm và cái nhìn sâu sắc để thiết kế code hoặc viết các bài kiểm tra để có thể dễ dàng bảo trì. Tuy nhiên bạn có thể học cách thiết kế code tốt hơn bằng cách làm việc với nhưng người có kinh nghiệm sử dụng ngôn ngữ lập trình PHP.Vì là một một ngôn ngữ lập trình kiểu động nên PHP quá linh hoạt và máy cần phải thực hiện nhiều công việc tham khảo để đảm bảo định nghĩa của một thứ gì đó và điều này khiến hiệu suất PHP chậm. Tuy nhiên phiên bản PHP7 đã thực hiện một số thay đổi để cải thiện tốc độ PHP. Ngoài ra, Facebook đã đầu tư vào PHP để cải thiện tốc độ ứng dụng PHP bằng cách biên dịch code qua HipHop Virtual Machine của Facebook. Mặc dù việc này không khiến nó nhanh như các ngôn ngữ kiểu tĩnh như Java nhưng đây vẫn là một cải tiến tuyệt vời.PHP đã giảm độ phổ biến của nó do một số vấn đề với thiết kế ngôn ngữ cũng như sự gia tăng của framework Ruby on Rails và Node.js, mặc dù PHP 7 đã được phát hành gần đây để sửa chữa hầu hết các vấn đề nó đã bị cáo buộc (không thống nhất, tốc độ, v.v…). Facebook đã có một khoản đầu tư lớn vào PHP, liệu điều này có làm tăng tỷ lệ chấp thuận PHP tăng lên trong tương lại không? Laravel, một khuôn khổ PHP, có vẻ như đang duy trì tỷ lệ chấp nhận tốt. Trong bảng xếp hạng ngông ngữ lập trình phổ biến củaTIOBE, PHP đứng thứ 6.',12,'Đã xác nhận','80% trong số 10 triệu trang web hàng đầu sử dụng ngôn ngữ lập trình PHP. PHP rất phổ biến đối với công việc tự do, bởi vì nhiều doanh nghiệp nhỏ hoặc những người không có kỹ thuật muốn sử dụng WordPress, Wix hoặc các hệ thống quản lý nội dung phổ biến khác để thiết lập trang web hoặc website bán hàng. PHP được thiết kế cho web và nó hoạt động tốt. Và Facebook đã có những khoản đầu tư lớn vào PHP.'),(20,'Trí tuệ nhân tạo là gì? AI (artificial intelligence) là gì?',3,'Ở thời điểm hiện tại, Thuật ngữ này thường dùng để nói đến các MÁY TÍNH có mục đích không nhất định và ngành khoa học nghiên cứu về các lý thuyết và ứng dụng của trí tuệ nhân tạo. Tức là mỗi loại trí tuệ nhân tạo hiện nay đang dừng lại ở mức độ những máy tính hoặc siêu máy tính dùng để xử lý một loại công việc nào đó như điều khiển một ngôi nhà, nghiên cứu nhận diện hình ảnh, xử lý dữ liệu của bệnh nhân để đưa ra phác đồ điều trị, xử lý dữ liệu để tự học hỏi, khả năng trả lời các câu hỏi về chẩn đoán bệnh, trả lời khách hàng về các sản phẩm của một công ty,...Nói nôm na cho dễ hiểu: đó là trí tuệ của máy móc được tạo ra bởi con người. Trí tuệ này có thể tư duy, suy nghĩ, học hỏi,... như trí tuệ con người. Xử lý dữ liệu ở mức rộng lớn hơn, quy mô hơn, hệ thống, khoa học và nhanh hơn so với con người. Rất nhiều hãng công nghệ nổi tiếng có tham vọng tạo ra được những AI (trí tuệ nhân tạo) vì giá trị của chúng là vô cùng lớn, giải quyết được rất nhiều vấn đề của con người mà loài người đang chưa giải quyết được. Trí tuệ nhân tạo mang lại rất nhiều giá trị cho cuộc sống loài người, nhưng cũng tiềm ẩn những nguy cơ. Rất nhiều chuyên gia lo lắng rằng khi trí tuệ nhân tạo đạt tới 1 ngưỡng tiến hóa nào đó thì đó cũng là thời điểm loài người bị tận diệt. Rất nhiều các bộ phim đã khai thác đề tài này với nhiều góc nhìn, nhưng qua đó đều muốn cảnh báo loài người về mối nguy đặc biệt này.Đầu tiên là phân loại trí tuệ nhân tạo AI theo hệ thống bao gồm trí tuệ nhân tạo mạnh hoặc yếu. Trí tuệ nhân tạo yếu hay còn được gọi là Narrow AI, là hệ thống trí tuệ nhân tạo được thiết kế và đào tạo cho các tác vụ cụ thể. Các trợ lý ảo chẳng hạn như Siri của Apple là một dạng trí tuệ nhân tạo yếu. Trí tuệ nhân tạo mạnh còn được gọi là Artificial General Intelligence hay trí tuệ nhân tạo tổng hợp, là hệ thống AI được trang bị khả năng nhận thức tổng quát của con người để khi thực hiện các tác vụ không quen thuộc, nó đủ thông minh để tìm ra các giải pháp. Phép thử Turing được phát triển bởi nhà toán học Alan Turing vào năm 1950 là phương pháp được sử dụng để xác thực xem một máy tính có thể có những suy nghĩ giống con người hay không, mặc dù phương pháp này gây nhiều tranh cãi.',12,'Đã xác nhận','Định nghĩa trí tuệ nhân tạo: (AI: Artificial Intelligence) có thể được định nghĩa như một ngành của khoa học máy tính liên quan đến việc tự động hóa các hành vi thông minh. AI là một bộ phận của khoa học máy tính và do đó nó phải được đặt trên những nguyên lý lý thuyết vững chắc, có khả năng ứng dụng được của lĩnh vực này.'),(21,'  AI - Trí tuệ nhân tạo là gì, những ứng dụng',3,'AI, trí tuệ nhân tạo là sự mô phỏng các quá trình hoạt động trí tuệ của con người, bao gồm quá trình học tập (thu thập thông tin và các quy tắc để sử dụng thông tin), lập luận (sử dụng các quy tắc để đạt được kết luận gần đúng), và tự sửa lỗi. Một số ứng dụng sử dụng trí tuệ nhân tạo AI bao gồm hệ chuyên gia (expert system), các ứng dụng nhận diện giọng nói và các ứng dụng machine vision.Trí tuệ nhân tạo, AI được đặt tên bởi nhà khoa học máy tính người Mỹ, John McCarthy vào năm 1956 tại Hội nghị Dartmouth. Ngày nay thuật ngữ AI được bổ sung thêm cả tự động hóa quy trình bằng Robot và Robot thực tế. Thời gian gần đây nổi lên thuật ngữ mới có tên Big Data hay gia tăng tốc độ, kích thước và thu thập các dữ liệu doanh nghiệp đa dạng. AI có thể thực hiện các tác vụ như xác định các mẫu trong dữ liệu hiệu quả hơn con người, cho phép các doanh nghiệp hiểu rõ hơn về dữ liệu của mình.Trí tuệ nhân tạo được phân loại theo nhiều cách khác nhau, dưới đây là 2 ví dụ điển hình về phân loại trí tuệ nhân tạo. Đầu tiên là phân loại trí tuệ nhân tạo AI theo hệ thống bao gồm trí tuệ nhân tạo mạnh hoặc yếu. Trí tuệ nhân tạo yếu hay còn được gọi là Narrow AI, là hệ thống trí tuệ nhân tạo được thiết kế và đào tạo cho các tác vụ cụ thể. Các trợ lý ảo chẳng hạn như Siri của Apple là một dạng trí tuệ nhân tạo yếu. Trí tuệ nhân tạo mạnh còn được gọi là Artificial General Intelligence hay trí tuệ nhân tạo tổng hợp, là hệ thống AI được trang bị khả năng nhận thức tổng quát của con người để khi thực hiện các tác vụ không quen thuộc, nó đủ thông minh để tìm ra các giải pháp. Phép thử Turing được phát triển bởi nhà toán học Alan Turing vào năm 1950 là phương pháp được sử dụng để xác thực xem một máy tính có thể có những suy nghĩ giống con người hay không, mặc dù phương pháp này gây nhiều tranh cãi.Có 3 thuật toán Machine Learning, bao gồm: Supervised Learning (học có giám sát), trong đó tập hợp dữ liệu được gắn nhãn sao cho các mẫu được phát hiện và sử dụng để gắn nhãn các tập dữ liệu mới. Tiếp theo là Unsupervised Learning (học không có giám sát), trong đó tập hợp dữ liệu không được dán nhãn và được sắp xếp theo phân loại tương đồng hoặc khác biệt. Và cuối cùng là Reinforcement Learning (học tăng cường), trong đó tập hợp dữ liệu không được dán nhãn, nhưng sau khi thực hiện một hành động hoặc một số hành động, hệ thống AI được phản hồi.',12,'Đã xác nhận','AI (Artificial Intelligence) hay còn gọi là trí tuệ nhân tạo là sự mô phỏng các quá trình hoạt động trí tuệ của con người bằng máy móc, đặc biệt là các hệ thống máy tính, để tìm hiểu rõ hơn AI - trí tuệ nhân tạo là gì, những ứng dụng'),(22,'Một vài kiến thức nền tảng về web',4,'Để các hệ thống khác nhau có thể xác định được cấu trúc của các message này để xử lý thì chúng sẽ sử dụng các giao thức chung. Ví dụ như giao thức HTTP và HTTPS định nghĩa giao thức mà các trình duyệt internet của bạn giao tiếp. Ví khi trình duyệt của bạn và máy chủ web đồng ý sử dụng giao thức này thì chúng có thể giao tiếp với nhau. Khi mà bạn gõ địa chỉ http://www.google.com vào trình duyệt của bạn thì các bước sẽ được thực hiện như sau: Trình duyệt của bạn sẽ lấy ra domain name của trang web từ url là : google.com Máy tính của bạn sẽ gửi yêu cầu DNS đến máy chủ được cài làm DNS severs của bạn. DNS sẽ giúp máy bạn phân giải domain name thành địa chỉ IP : 216.58.201.228:80 Máy tính của bạn sẽ cố gắng cài đặt một kết nối TCP đến địa chỉ IP này trên cổng 80 (cổng mặc định sử dụng cho giao thức HTTP). ( Bạn có thể thử tự tạo kết nối TCP bằng cách chạy lệnh nc 216.58.201.228 80 trên teminal. Nếu thành công thì trình duyệt sẽ gửi 1 HTTP request đại loại như:Get: Truy xuất các thông tin tài nguyên được xác định theo yêu cầu. Head: Tương tự như Get nhưng server sẽ không trả về request body trong response. Post: Thường được sử dụng để gọi đến các chức năng để tạo 1 cái gì đó ví dụ như tạo comment trong các bài đăng, tạo tài khoản người dùng, … Tất nhiên các hành động này có thể server sẽ không thực hiện nếu như xảy ra lỗi hoặc không có quyền từ phía người dùng,… Put: Phương thức này thường được dùng để gọi các chức năng dùng để chỉnh sửa các nguồn tài nguyên có sẵn. Delete: Như tên gọi phương thức này để xóa một tài nguyên xác định trên server. Trace: Đây là một phương thức không phổ biến giúp client xem được những gì máy chủ trả về, và sử dụng để kiểm tra và chuẩn đoán thông tin. Connect: Thực sự dùng để sử dụng riêng với proxy. Options: Sử dụng để yêu cầu thông tin từ sever về các phương thức có thể sử dụng. Ví dụ gọi phương thức OPTIONS có thể giúp client biết được server chấp nhận các phương thức GET, POST, PUT, DELETE nhưng không chấp nhận các phương thức HEAD hoặc TRACE.',12,'Đã xác nhận','Nếu bạn mới chuẩn bị bắt đầu bước đầu tiên làm quen với hacking thì bài viết đầu tiền trong seri này rất cần thiết với bạn. Nó sẽ giúp bạn hiểu được internet hoạt động như thế nào. Chúng ta có thể mô tả một cách tổng quan rằng internet là một hệ thống các thiết bị thông tin được kết nối với nhau và có thể gửi tin nhắn cho nhau. Một số các thiết bị chỉ có phép nhận các loại message nhất định, một số thì chỉ nhận message từ 1 danh sách các thiết bị được xác định. Nhưng tất cả các hệ thống trên internet đều có 1 địa chỉ ip mà mọi người đều có thể gửi message đến. Và các hệ thống này sẽ xác định những điều cần làm với các message này và cách phản hỏi lại chúng cho người gửi.'),(23,'10 Kỹ Năng Mà Lập Trình Viên Web Cần Có Để Phát Triển',4,'Lập trình viên web hiển nhiên vẫn cần đến một số kỹ năng mềm quan trọng, chính những kỹ năng này sẽ giúp họ giữ vững trong sự nghiệp. Có thể kể đến: kỹ năng quản lý khách hàng, tư duy phản biện, kỹ năng giao tiếp. Kỹ năng quản lý khách hàng có thể giúp bạn đối phó với nhiều khách hàng với tính cách khác nhau mà không cần hiểu về bối cảnh hay kiến thức web của họ. Nếu bạn có ý kiến giúp cải thiện sản phẩm tốt hơn, kỹ năng này sẽ trở nên vô cùng hữu ích, khiến khách hàng tin tưởng bạn với dự án hơn nữa. Javascript là một trong những kỹ năng quan trọng nhất mà các nhà tuyển dụng trên thế giới tìm kiếm trước khi họ thuê bất kỳ ai, không chỉ riêng lập trình viên. Đồng nghĩa với việc, một lập trình viên thành thạo kỹ năng này sẽ luôn tìm được một công việc, nơi mà họ luôn có thể tận dụng được kiến thức JavaScript của mình. Do đó, bạn cần làm mọi cách để nắm vững JavaScript nếu muốn giữ đứng vững trong lĩnh vực công nghệ. Tuy nhiên đừng bỏ qua các ngôn ngữ lập trình khác vì chúng cũng không kém phần quan trọng. Đây là một kỹ năng quan trọng mà các lập trình viên web cần thành thục. Yêu cầu của khách hàng biến đổi muôn hình vạn trạng, bạn sẽ phải sẵn sàng phục vụ họ để thu hút nhiều cơ hội công việc hơn. Ví dụ, nếu bạn là lập trình viên full-stack web, rất có thể bạn sẽ không cách nào đáp ứng được hết nhu cầu của khách hàng. Vì đâu mà bạn đắt khách thế? Phần lớn là nhờ vòa khả năng chuyển đổi dễ dãng từ công nghệ này sang công nghệ khác đấy. Mọi người đều muốn học về IoT, cả để đáp ứng nhu cầu tuyển dụng của nhiều công ty ngày nay, và đồng thời trâu dồi thêm kỹ năng cần thiết cho sự nghiệp. Đây cũng là một kỹ năng giúp lập trình viên web áp dụng vào môi trường sống của bản thân và những người xung quanh.Ngày nay, nhu cầu về lập trình viên di động đang rất cao cho những ai có thể phát triển những website đa trình duyệt và ứng dụng đa nền tảng. Lĩnh vực này không yêu cầu quá cao, miễn là bạn có thể lập trình tốt. Sau khi tiếp thị rộng rãi để thu hút và giữ chân khách hàng, thành công sẽ tự gõ của thôi. Nếu có thể thoải mái phát triển web với bất kỳ công nghệ và nền tảng nào trên thị trường, bạn đã gần vươn đến đỉnh cao rồi đấy. Full-stack là một kỹ năng rất cần thiết cho lập trình viên web, vì đây là một trong những yêu cầu mà nhà tuyển dụng mong muốn. Nếu bạn muốn tiếp cận nhiều công việc hơn trong tương lai, hãy hướng đến full-stack để có thể làm việc hiệu quả hơn với bất kỳ công nghệ hay nền tảng nào.Bảo mật vẫn là một trong những mối đe dọa lớn đối với nhiều công ty ngày nay. Lập trình viên cần phải học nhiều hơn về cách hoạt động an toàn trên web và cách bảo vệ các đoạn mã của mình. An ninh mạng cũng rất quan trọng trong môi trường web. Các công ty bạn đang làm việc cũng có thể bị ảnh hưởng. Bởi vậy, hãy học cách làm việc an toàn và bảo mật, không chỉ riêng cho bản thân mà cho cả khách hàng. Ngày nay, rất khó nhận biết người ta đang ưa chuộng thứ công nghệ nào, đặc biệt với ngôn ngữ lập trình lại càng khó hơn. Do đó, một lập trình viên thông minh sẽ đa dạng hóa để có thể sẵn sàng cho bất kỳ dự án nào. Có rất nhiều ngôn ngữ lập trình được sử dụng ngày nay, hầu hết đều rất dễ học. Không có ngôn ngữ nào là tốt nhất, chúng đều có những vị trí quan trọng khác nhau. Để bắt kịp xu hướng đang biến đổi ngày càng nhanh chóng, bạn buộc phải đa dạng hóa hơn nữa những kỹ năng đã có. Điều này sẽ giúp bạn sẵn sàng cho bất kỳ công việc nào trong tương lai.Đây là một trong những kỹ năng quan trọng nhất mà lập trình viên web cần phát triển. Sự nhanh nhẹn sẽ tỏ ra hữu ích trong lâu dài. Đại loại như bạn đang rất tham vọng nhưng vẫn phải tỏ ra khiêm tốn vậy. Kỹ năng chia dự án ra nhiều phần nhỏ, khả xác định việc cần ưu tiên, khả năng thích ứng với thay đổi và đảm bảo thể trạng tốt nhất tại mọi thời điểm,… là những phẩm chất cho bất cứ ai, ở bất cứ khi nào trong ngành này. Mọi thứ đang thay đổi nhanh chóng trong ngành công nghệ máy tính. Lập trình viên web nên phát triển nhiều kỹ năng để có thể làm việc tốt, cũng như phục vụ được ngày càng nhiều khách hàng hơn nữa.',12,'Đã xác nhận','Khi công nghệ máy tính tiếp tục phát triển, nhu cầu về chất lượng các nhà cung cấp dịch vụ ngày càng cao hơn, đặc biệt là nhu cầu về số lượng lập trình web cũng gia tăng. Một phần lý do là vì hiện nay, lập trình viên web có thể làm được nhiều thứ hơn so với trước đây. Điều đó có nghĩa họ cần nhiều kỹ năng hơn để hoàn thành tốt công việc được giao. Nếu hiện tại bạn là lập trình viên web, việc tập trung phát triển kỹ năng của bản thân sẽ giúp bạn có chỗ đứng vững trong ngành này. Vì vậy, dưới đây là một vài kỹ năng mà bạn nên có trong sơ yêu lí lịch của mình'),(24,'Làm thế nào để trở thành một lập trình viên Android',5,'Android là hệ điều hành dẫn đầu không thể tranh cãi của thị phần smartphone toàn cầu. Nhờ sự tăng trưởng tại các thị trường mới nổi như Mexico, Thổ Nhĩ Kỳ và Brazil, sự thống trị này sẽ không suy giảm trong thời gian tới.Việc dẫn đầu thị trường giúp đảm bảo số lượng công việc rất dồi dào cho các nhà phát triển ứng dụng Android. Hơn nữa, nền tảng Android là mã nguồn mở (toàn bộ mã nguồn Android có thể xem tại đây, mặc dù có một số phần mềm độc quyền như Google Play), tạo ra một hệ sinh thái các nhà phát triển năng động. Các nhà phát triển Android chia sẻ lời khuyên, thủ thuật và hướng dẫn trên cộng đồng Android, và kể từ khi Google giúp các nhà phát triển bằng cách xây dựng các công cụ như Google Play Services cho những tác vụ ứng dụng phổ biến như đăng nhập, xác thực, vị trí (location) và lưu trữ, các nhà phát triển Android có thể tập trung vào việc xây dựng các chức năng cốt lõi cho ứng dụng của họ. Về cơ bản, đây là một thời điểm đặc biệt thú vị để bắt đầu một sự nghiệp trong phát triển ứng dụng Android. Có một nguồn cung công việc rất dồi dào, nhu cầu đối với các ứng dụng Android hứa hẹn sẽ tăng cao trong tương lai, và công nghệ - bao gồm cả các ứng dụng wearable và ứng dụng cho TV - là rất hấp dẫn.Trước tiên: bạn cần học các kỹ năng kỹ thuật. Việc phát triển Android có thể thực hiện trên máy tính Mac, Windows PC, hoặc Linux. Bạn cũng sẽ cần một thiết bị Android (bạn có thể sử dụng một emulator như Genymotion trong quá trình phát triển, nhưng cuối cùng bạn sẽ muốn test ứng dụng của mình trên một thiết bị thực). Dưới đây là danh sách ngắn các công cụ cần biết để trở thành một nhà phát triển Android. Java\r\nKiến thức cơ bản nhất để phát triển ứng dụng Android là ngôn ngữ lập trình Java. Để trở thành một lập trình viên Android thành công, bạn sẽ cần phải quen thuộc với các khái niệm trong Java như vòng lặp, danh sách, biến và các cấu trúc điều khiển. Java là một trong những ngôn ngữ lập trình phổ biến nhất được sử dụng bởi các nhà phát triển phần mềm hiện nay, vì vậy việc thông thạo nó sẽ giúp bạn hoàn thành tốt công việc, thậm chí vượt ra ngoài nền tảng Android. SQL: Bạn cũng sẽ cần phải tìm hiểu những kiến thức cơ bản của SQL để tổ chức cơ sở dữ liệu trong các ứng dụng Android. SQL là một ngôn ngữ để thực hiện các truy vấn lấy thông tin từ cơ sở dữ liệu. Một khi bạn có thể viết nó, thì sẽ không có bất kỳ câu hỏi nào mà bạn không thể truy vấn trong dữ liệu của mình. Android Software Development Kit (SDK) và Android Studio:  Một trong những phần hay nhất về phát triển cho Android đó là các công cụ cần thiết đều miễn phí và dễ dàng để có được. Android SDK có sẵn để bạn tải về miễn phí, cũng như Android Studio, môi trường phát triển tích hợp (IDE) chính thức cho việc phát triển ứng dụng Android. Android Studio là chương trình chính, nơi mà các nhà phát triển viết code và lắp ráp các ứng dụng của họ từ các gói và thư viện khác nhau. Android SDK bao gồm các đoạn code ví dụ, thư viện phần mềm, công cụ lập trình tiện dụng, và nhiều hơn nữa để giúp bạn xây dựng, kiểm thử, và gỡ lỗi các ứng dụng Android. Một điểm nổi bật khác trong phát triển cho Android là sự dễ dàng của quá trình submit các ứng dụng. Một khi bạn đã sẵn sàng để submit ứng dụng của mình lên Google Play store, hãy đăng ký một tài khoản Google Play publisher (trong đó bao gồm một khoản lệ phí $25 đô-la qua Google Wallet), tuân theo Android’s launch checklist, submit thông qua Google Play Developer Console, chờ đợi Google phê duyệt, và thấy nó xuất hiện trên chợ ứng dụng. Thật đơn giản và thỏa mãn. XML: Các lập trình viên sử dụng XML để mô tả dữ liệu. Những kiến thức cơ bản về cú pháp XML sẽ rất hữu ích trong cuộc hành trình của bạn để trở thành một nhà phát triển Android khi làm những công việc như thiết kế giao diện người dùng (UI) và phân tích dữ liệu lấy từ internet. Phần lớn những gì bạn cần làm với XML đều có thể được thực hiện thông qua Android Studio, nhưng nó tạo cho bạn nền tảng kiến thức về ngôn ngữ đánh dấu.',12,'Đã xác nhận','Khi các ứng dụng di động ngày càng được sử dụng rộng rãi và cho phép người dùng có thể kết nối với nhau theo nhiều cách, thì công việc của các nhà phát triển ứng dụng ngày càng trở nên quan trọng trong một nền kinh tế toàn cầu. Các ứng dụng di động chúng ta sử dụng hàng ngày đã thay đổi cách chúng ta tiến hành kinh doanh, giao tiếp, giải trí và học thêm những điều mới. Bạn sẽ không sai nếu nghĩ rằng phát triển ứng dụng di động là một trong những ngành nghề thú vị nhất tại thời điểm này.'),(25,'9 BƯỚC TRỞ THÀNH LẬP TRÌNH VIÊN iOS TỪ CON SỐ 0',6,'Như các bạn đã biết, nghề IT bao gồm rất nhiều mảng ngành nghề khác nhau, với những ngôn ngữ lập trình khác nhau. Và khi đứng quyết định phải chọn một ngôn ngữ để tìm hiểu và theo đuổi, điều gì khiến bạn chọn việc lập trình iOS? Điều đầu tiên phải nhắc đến ở đây là sự bùng nổ của xu hướng mobile hoá hiện nay. Trong thời đại công nghệ số đang ngày càng lan toả, sự phát triển của nền tảng mobile là một điều tất yếu. Lợi thế của mobile là sự di động và khả năng cá nhân hoá. Vượt trên mọi chiếc máy tính hay laptop, điện thoại di động luôn đi theo bạn mọi lúc mọi nơi, hiểu hành vi thói quen của bạn. Điều này không chỉ mang lại sự tiện dụng cho bản thân người dùng, mà đối với chính các nhà cung cấp dịch vụ, các nhà phát triển, đó cũng là cơ hội rất lớn để tiếp cận lượng người dùng khổng lồ này. Chính vì vậy, ngày nay, phát triển sản phẩm trên nền tảng mobile đang là xu thế của rất nhiều mảng dịch vụ. Nhưng tại sao nên chọn iOS thay vì các hệ điều hành khác, như Android, hay Hybrid? Trước hết, nếu so sánh với ứng dụng Hybrid, một ứng dụng iOS native sẽ có những ưu điểm về sự ổn định, mượt mà, khả năng tối ưu hoá hiệu năng của thiết bị cũng như trải nghiệm của người dùng. Còn nếu so sánh với Android, thực tế hiện nay, cả hai nền tảng di động này đều đã phát triển ổn định và nhu cầu của thị trường rất lớn. Tuy nhiên, trong thực tế, rất nhiều doanh nghiệp chọn iOS là nền tảng đầu tiên khi họ có nhu cầu phát triển ứng dụng mobile. Nguyên nhân bắt nguồn từ sự ổn định và hiệu quả thu được từ thực tế. Theo thống kê trong nhiều năm, người dùng iOS là những người chịu chi hơn bất kỳ nền tảng di động nào khác. Thêm vào đó, doanh thu và thị phần di động của iOS vẫn chiếm ưu thế khi đem so sánh với các nền tảng khác. Một trong những khó khăn lớn nhất ngăn cản bạn đến với nghề lập trình iOS chính là thiết bị. Để có thể bắt tay vào tìm hiểu ngôn ngữ lập trình này, bạn cần một chiếc máy tính chạy MAC OS. Nếu như trước đây, giá của một chiếc máy tính mang thương hiệu Apple có giá tương đối đắt đỏ, không phù hợp với các bạn sinh viên đang trong ghế nhà trường hoặc mới ra trường, thì hiện nay, tình hình đã thay đổi khá nhiều. Bạn hoàn toàn có thể mua một chiếc Macbook cũ, với mức giá trên dưới 10 triệu đồng, hoàn toàn đáp ứng được nhu cầu học lập trình iOS. Bạn cũng có thể sử dụng một chiếc máy tính mang thương hiệu bình thường và cài MAC OS theo hình thức Hackintosh. Tuy nhiên, điều này sẽ khiến bạn gặp nhiều những khó khăn khác, như việc máy không hỗ trợ nhiều phần cứng cũng như khả năng cập nhật lên hệ điều hành mới. Theo ý kiến cá nhân tác giả, bạn hãy cố gắng trang bị cho mình một chiếc Macbook, với năm sản xuất khoảng từ 3 năm trở lại là tốt nhất. Ngoài máy tính, một điều không thể thiếu với một lập trình viên mobile nói chung, cũng như lập trình viên iOS nói riêng, đó là thiết bị test. Để bước đầu tìm hiểu iOS, bạn hãy trang bị cho mình một chiếc iPhone. Ngày nay, việc sở hữu iPhone đã không còn là điều gì quá xa xỉ với đại đa số người dân Việt Nam. Chỉ cần từ 3-5 triệu đồng, bạn đã có một chiếc iPhone đủ để vọc vạch lập trình iOS.Với bất cứ ngôn ngữ lập trình nào, IDE là công cụ hỗ trợ đóng vai trò vô cùng quan trọng mà nếu thiếu, năng suất lao động sẽ không thể hiệu quả. Với lập trình viên iOS, xCode là một công cụ như vậy. Gần như tất cả lập trình viên iOS trên thế giới đều sử dụng xCode để lập trình iOS. Apple đã xây dựng và cung cấp một bộ IDE tuyệt vời cho các lập trình viên của mình. Không chỉ hỗ trợ coding hay debug, bạn còn có thể thực hiện rất nhiều tác vụ với xCode như merge source code, trích xuất ipa hay đẩy bản build lên Apple Store,… Bạn sẽ không thể nào viết đúng viết đẹp nếu không biết cách sử dụng chiếc bút. Thế nên, hãy mở xCode và thử sử dụng tất cả những gì có thể, với sự tò mò, hiếu kì của một đứa trẻ. Với nhiều lập trình viên ngôn ngữ khác, việc lập trình iOS có vẻ rất dễ dàng và nhàn hạ, với việc kéo và thả các control lên giao diện. Tuy nhiên, để nắm rõ nguyên lý của việc đó cũng cần nhiều thời gian tìm hiểu. Với những người bắt đầu học một ngôn ngữ mới, việc tự mình viết source code sẽ giúp bạn ghi nhớ và hiểu sâu hơn về nguyên lý hoạt động của các thành phần trong ngôn ngữ đó. Dù rằng việc đó có tốn nhiều thời gian hơn, nhưng sẽ rất tốt cho việc học của bạn. Hơn nữa, viết source code giúp cho việc xử lý linh hoạt hơn, có thể xử lý được nhiều trường hợp phức tạp hơn so với việc kéo thả. Một khi đã hiểu rõ và ghi nhớ được rồi, bạn cũng nên thử kéo thả , sử dụng Interface Builder (XIB, StoryBoard). Đó là những công cụ mới hơn, cho phép tăng năng suất làm việc, giảm số lượng code mà lập trình viên phải viết. Điều này đặc biệt hữu ích khi sử dụng autolayout để hỗ trợ các loại thiết bị có kích thước màn hình khác nhau.',12,'Đã xác nhận','Trong rất nhiều các ngôn ngữ lập trình khác nhau, hiện nay rất nhiều bạn chọn iOS là con đường phát triển nghề nghiệp của mình. Còn bạn thì sao? Nếu còn đang phân vân thì bài viết này dưới đây sẽ đưa ra một vài thông tin cần thiết giúp bạn đưa ra quyết định cho riêng mình nhé. Với các bạn đã hạ quyết tâm thì cùng đọc để xem chúng mình cần chuẩn bị hành trang ra sao nào.'),(26,'Bất ngờ: đào tạo AI lại gián tiếp phát thải CO2 gây hại cho môi trường',7,'AI hay trí tuệ nhân tạo đang dần trở thành động lực của ngành công nghiệp khi nó giúp con người phát hiện ung thư, lái xe và dự đoán thiên tai,…Thế nhưng chúng ta đều không hay biết rằng, quá trình đào tạo AI cũng gây ra những hệ lụy cho môi trường.Theo một nghiên cứu mới đây của các nhà khoa học Mỹ, mô hình đào tạo AI phổ biến có thể phát thải ra hơn 283,9 tấn CO2. Con số này nhiều hơn 5 lần số lượng khí thải trung bình mà một chiếc xe tại Mỹ phát thải ra môi tường trong suốt vòng đời của nó, tính bao gồm cả công đoạn sản xuất xe hơi. Theo Interesting Engineering, nghiên cứu trên tiến hành tìm hiểu quá trình xử lý ngôn ngữ tự nhiên hoặc lập trình ngôn ngữ tư duy (NLP). Cộng đồng nghiên cứu NLP đã đóng góp khá nhiều cho công nghệ trong thời gian quan, bao gồm việc dịch máy và hoàn thành câu. Tuy nhiên để đánh đổi những cải tiến trong thời gian qua trên nhiều ứng dụng, việc đào tạo AI hiểu được ngôn ngữ của con người đòi hỏi một lượng dữ liệu khổng lồ được thu thập từ Internet. Đặc biệt việc chuyển đổi các bộ dữ liệu này thành một chương trình đào tạo cần tới một nguồn năng lượng máy tính khổng lồ. Tất nhiên điện năng được lấy từ nhà máy điện và để tạo ra điện, con người cần tới các nguồn tài nguyên như nhiên liệu hóa thạch, hạt nhân,…và đó chỉ là một trong số ít những nguyên nhân gây ra biến đổi khí hậu và ô nhiễm môi trường. Bốn mô hình được các nhà nghiên cứu sử dụng để xác định tác động của quá trình đào tạo AI đối với môi trường gồm Transformer, ELMo, BERT và GPT-2. Để tìm ra mức độ phát thải CO2 của các mô hình này, nhóm nghiên cứu tiến hành đào tạo từng mô hình một, dựa trên một GPU duy nhất trong vòng tối đa 1 ngày. Hoạt động này nhằm đo lượng điện tiêu thụ của AI. Sau đó, họ sử dụng số giờ đào tạo các mô hình để tính tổng điện năng mà toàn bộ quá trình đào tạo có thể tiêu thụ. Con số này sau đó sẽ được chuyển đổi thành khối lượng CO2 phát thải. Kết quả cho thấy, chi phí đào tạo AI và tác động của nó với môi trường tỷ lệ thuận với quy mô của mô hình huấn luyện AI. Bước cuối cùng và cũng là tốn kém nhất chính là cải thiện độ chính xác của AI. Mặc dù vậy đây cũng là bước gây ra tác động lớn nhất đối với môi trường. Với các mô hình loại bỏ bước cuối cùng, lượng phát thải CO2 ước tính chỉ vào khoảng 635kg CO2. Con số này tương đương với lượng CO2 của một chuyến bay vòng quanh nước Mỹ áp dụng cho một người. Điều tồi tệ hơn là khi các nhà nghiên cứu khẳng định, đây chỉ là những con số khiêm tốn vì các nhà nghiên cứu chỉ đào tạo mô hình AI với mức tiêu thụ điện năng tối thiểu. Hầu hết các chương trình đào tạo AI thực tế sẽ cần một lượng điện năng khổng lồ hơn thế. Tác động từ việc huấn luyện AI là rất lớn. Đó là lý do nhóm nghiên cứu đề xuất chuyển hoạt động nghiên cứu AI ra khỏi các học viện và áp dụng chỉ trong nội bộ một không gian riêng. Có thể thấy, chi phí để phát triển AI thực tế rất lớn vì nó không chỉ tốn tài nguyên mà còn gián tiếp gây ô nhiễm môi trường. Mặc dù AI đang thúc đẩy sự phát triển của nhiều ngành công nghiệp như quốc phòng, y tế, giáo dục. Nhưng rõ ràng việc theo dõi và giám sát sự phát triển của AI sẽ ngày càng khó khăn hơn nếu như các nguồn tài nguyên dần cạn kiệt.',12,'Đã xác nhận','Quá trình đào tạo AI tưởng chừng là vô hại nhưng đang gián tiếp tác động đến môi trường và khí hậu do hoạt động phát thải CO2 từ quá trình tiêu thụ điện năng.'),(30,'abcd',1,'abcd\r\n',12,'Đã xác nhận','abcd');
/*!40000 ALTER TABLE `baiviet` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `binhluan`
--

DROP TABLE IF EXISTS `binhluan`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `binhluan` (
  `idnguoidung` int(10) unsigned NOT NULL,
  `idbaidang` int(10) unsigned NOT NULL,
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `noidung` longtext,
  PRIMARY KEY (`id`),
  KEY `fk_binhluan_baidang` (`idbaidang`),
  KEY `_2` (`idnguoidung`,`idbaidang`),
  CONSTRAINT `fk_binhluan_baidang` FOREIGN KEY (`idbaidang`) REFERENCES `baidang` (`id`),
  CONSTRAINT `fk_binhluan_nguoidung` FOREIGN KEY (`idnguoidung`) REFERENCES `nguoidung` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `binhluan`
--

LOCK TABLES `binhluan` WRITE;
/*!40000 ALTER TABLE `binhluan` DISABLE KEYS */;
INSERT INTO `binhluan` VALUES (12,2,4,'abcd'),(12,7,7,'ok');
/*!40000 ALTER TABLE `binhluan` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `chiase`
--

DROP TABLE IF EXISTS `chiase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `chiase` (
  `id` int(11) NOT NULL,
  `idnguoidung` int(10) unsigned NOT NULL,
  `idbaidang` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_chiase_nguoidung` (`idnguoidung`),
  KEY `fk_chiase_baidang` (`idbaidang`),
  CONSTRAINT `fk_chiase_baidang` FOREIGN KEY (`idbaidang`) REFERENCES `baidang` (`id`),
  CONSTRAINT `fk_chiase_nguoidung` FOREIGN KEY (`idnguoidung`) REFERENCES `nguoidung` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_vietnamese_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `chiase`
--

LOCK TABLES `chiase` WRITE;
/*!40000 ALTER TABLE `chiase` DISABLE KEYS */;
/*!40000 ALTER TABLE `chiase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `loainguoidung`
--

DROP TABLE IF EXISTS `loainguoidung`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `loainguoidung` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `tenloai` tinytext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `loainguoidung`
--

LOCK TABLES `loainguoidung` WRITE;
/*!40000 ALTER TABLE `loainguoidung` DISABLE KEYS */;
INSERT INTO `loainguoidung` VALUES (1,'Thành viên'),(2,'Admin');
/*!40000 ALTER TABLE `loainguoidung` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `luotthich`
--

DROP TABLE IF EXISTS `luotthich`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `luotthich` (
  `idnguoidung` int(10) unsigned NOT NULL,
  `idbaidang` int(10) unsigned NOT NULL,
  PRIMARY KEY (`idnguoidung`,`idbaidang`),
  KEY `fk_luotthich_baidang` (`idbaidang`),
  CONSTRAINT `fk_luotthich_baidang` FOREIGN KEY (`idbaidang`) REFERENCES `baidang` (`id`),
  CONSTRAINT `fk_luotthich_nguoidung` FOREIGN KEY (`idnguoidung`) REFERENCES `nguoidung` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_vietnamese_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `luotthich`
--

LOCK TABLES `luotthich` WRITE;
/*!40000 ALTER TABLE `luotthich` DISABLE KEYS */;
/*!40000 ALTER TABLE `luotthich` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `nguoidung`
--

DROP TABLE IF EXISTS `nguoidung`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `nguoidung` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `hoten` text NOT NULL,
  `tendangnhap` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `trinhdohocvan` varchar(100) DEFAULT NULL,
  `matkhau` longtext NOT NULL,
  `ngaysinh` date DEFAULT NULL,
  `idloainguoidung` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_nguoidung_loainguoidung` (`idloainguoidung`),
  CONSTRAINT `fk_nguoidung_loainguoidung` FOREIGN KEY (`idloainguoidung`) REFERENCES `loainguoidung` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `nguoidung`
--

LOCK TABLES `nguoidung` WRITE;
/*!40000 ALTER TABLE `nguoidung` DISABLE KEYS */;
INSERT INTO `nguoidung` VALUES (1,'Lương Ngọc Vũ','luongngocvu','lnv@gmail.com','Đại học','pass','1998-08-16',1),(2,'Phạm nhựt Thanh','phamnhutthanh','pnt@gmail.com','Đại học','pass','1998-12-12',2),(12,'Lương Ngọc Vũ','lnv','abc@gmail.com','Đại học','$2b$10$d6m0DVfpuvQzZckispxZmeNwr8KT4r9pa0fsStTgXNg7zr.Oj7xkO','1998-08-16',1),(13,'LNV','luongngocvu','luongngocvu@gmail.com','ĐH','$2b$10$ab7UII.dvZaRTtLnOXVBwegZxD9VuI/QtlljlXlBf8kABbmPXGubO','2019-12-31',2);
/*!40000 ALTER TABLE `nguoidung` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `theloaibaiviet`
--

DROP TABLE IF EXISTS `theloaibaiviet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `theloaibaiviet` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `tentheloai` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `theloaibaiviet`
--

LOCK TABLES `theloaibaiviet` WRITE;
/*!40000 ALTER TABLE `theloaibaiviet` DISABLE KEYS */;
INSERT INTO `theloaibaiviet` VALUES (1,'Ngôn ngữ lập trình'),(2,'Lập trình OOP'),(3,'Trí tuệ nhân tạo'),(4,'Lập trình website'),(5,'Lập trình Android'),(6,'Lập trình iOS'),(7,'Tin tức tổng hợp');
/*!40000 ALTER TABLE `theloaibaiviet` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-06-16 16:28:08
